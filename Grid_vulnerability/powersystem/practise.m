clear; clc;
define_constants;
mpc = loadcase('case39');
% mpc.bus(4,:) =[];
% mpc.branch(4,:) = [];
% mpc.branch([5,6,7,8],:) = [];
% N = 1;
% a = [];
% for i =1:N
%     mpc.bus(28,PD)=normrnd(206,206*0.2);%功率变化模型
% %     mpc.bus(4,PD)= 500;
%     [MVAbase, bus, gen, branch, success,et] = runpf(mpc);
%     a(i) = sum(bus(28,VA));
%   
% end
% b = sum(a)./N
%% 连续潮流计算CPF的使用
clear; clc;
define_constants;
mpopt = mpoption('out.all', 0, 'verbose', 2);
mpopt = mpoption(mpopt,'cpf.stop_at','FULL','cpf.step',0.2);
mpopt = mpoption(mpopt,'cpf.plot.level',2);
mpcb = loadcase('case39');
PQ_init = mpcb.bus(:, [PD QD]);   %母线节点额定功率
PQ_init1 = mpcb.gen(:, [PG QG]);  %发电节点额定功率
mpct = mpcb;
mpct.gen(:, [PG QG]) = mpcb.gen(:, [PG QG]) * 2.5;
mpct.bus(:, [PD QD]) = mpcb.bus(:, [PD QD]) * 2.5;
results = runcpf(mpcb, mpct, mpopt);
Voltage = abs(results.cpf.V);          %电压幅值  39×52的矩阵
Angle = angle(results.cpf.V);
xlswrite('Voltage_CPF.xlsx',Voltage);  %取绝对值（幅值）
xlswrite('Angle_CPF.xlsx',Angle);
Lam = results.cpf.lam;                 %lamda向量  1×52的矩阵
xlswrite('Lam_CPF.xlsx',Lam);
Max_lam = results.cpf.max_lam;         %鞍结点lamda的最大值
V_critical = abs(Voltage(20));         %临界电压行向量1×39
xlswrite('V_critical_CPF.xlsx',V_critical);  
PQ_max = mpct.bus(:, [PD QD]);         %母线最大功率值
PQ1_max = mpct.gen(:, [PG QG]);         %发电节点最大功率值
PQ_critical = PQ_init + Max_lam*(PQ_max-PQ_init); %母线临界功率值
PQ1_critical = PQ_init1 + Max_lam*(PQ1_max-PQ_init1); %母线临界功率值
xlswrite('PQ_critical_CPF.xlsx',PQ_critical); 
xlswrite('PQI_critical_CPF.xlsx',PQ1_critical); 
