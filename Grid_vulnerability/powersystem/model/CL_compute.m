%IEEE30标准算例
clc;
define_constants;
mpc = loadcase('case39');
branch = mpc.branch(:,[F_BUS,T_BUS]);
a = zeros(39);
branch1 = [branch(:,1),branch(:,2)];
%得到IEEE30节点的上三角邻接矩阵a
for i = 1:length(branch1)
    a(branch1(i,1),branch1(i,2)) = 1;
end
a = a + a';% a为完整的临界矩阵
[D,L,dist] = myAPL(a);
[TC,c] = mycluster(a);
L
TC



% %%规则网络构建
% K = 2;
% N = 30;
% a = zeros(30);
% for i = 1:K/2
%     a = a + diag(ones(1,N-i),i);
% end
% a = a + a';
% [D,L,dist] = myAPL(a)
% [TC,c] = mycluster(a)  
% L
% TC



% %%随机网络构建
% L1 = zeros(1,1000);%%1000次取平均数
% TC1 = zeros(1,1000);
% for k = 1:1000
%     K = 4;
%     N = 30;
%     A = zeros(30);
%     P = [1]
%     for i= 1:K/2
%         A = A + diag(ones(1,N-i),i);   %构造一个第i条对角线全为1的N*N矩阵，加到原矩阵
%     end
%     for i = 1:K/2
%         A(N-K/2+i:N,i)=1; % 环形的首尾相接处的边
%     end
%     A = A + A'; 
%     %初始化完成
%     A_BACK = A;
%     %以不同的概率P对原来的边进行重新连接
%     for i = 1:length(P)
%         i
%         A = A_BACK;         %防止A被修改
%         p = P(i);  
%         %重新连接
%         for j = 1:K/2  %只需要顺时针就行  每个节点的顺时针就能遍历所有的边
%             NeedRW = find(rand(1,N) <= p);   %通过概率得到这些点是需要重新连接的
%             for x = 1:length(NeedRW)
%                 %连接新节点
%                 while 1
%                     NewVertice = fix(rand()*N+1);    %找到要连接的新节点
%                     if  NewVertice~=NeedRW(x) && A(NeedRW(x),NewVertice) == 0   %不能自连，重复连接
%                         A(NeedRW(x),NewVertice)=1;
%                         A(NewVertice,NeedRW(x))=1;
%                         break;
%                     end
%                 end
%                 %删除老节点
%                 if NeedRW(x) <= N-j %原来连接的老节点 比节点大 ，这个节点在（1～N-i）
%                    A(NeedRW(x),NeedRW(x)+j)=0;
%                    A(NeedRW(x)+j,NeedRW(x))=0;
%                 else                %原来连接的老节点 比节点小 ，这个节点在（N-i～N）
%                    A(NeedRW(x)-N+j,NeedRW(x)) = 0;
%                    A(NeedRW(x),NeedRW(x)-N+j) = 0;
%                 end
%             end
%         end%当前概率 重新连接结束
%     end
%     A = A + A'
%     [D,L,dist] = myAPL(A);
%     [TC,c] = mycluster(A);
%     if L == Inf
%         L = 0
%     else
%         L = L
%     end
%     
%     L1(1,k) = L
%     TC1(1,k) = TC
% end
% L_mean = mean(L1)
% TC_mean = mean(TC1)
